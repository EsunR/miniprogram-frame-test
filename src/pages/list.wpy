<template>
  <div class="list-container">
    <div class="title-container">
      <text>成倍增长数据量</text>
      <switch bindchange="handleSwitchChange"></switch>
    </div>
    <div class="list-container">
      <card v-for="(item, index) in listData" :key="index" :data="item"></card>
    </div>
  </div>
</template>

<script>
import wepy from '@wepy/core';
import { list_data } from '../data/list-data';
import { shuffle } from '../utils/tools';
wepy.page({
  data: {
    listData: [],
    refreshCount: 1,
    renderStartTime: new Date(),
    multiply: false
  },

  methods: {
    handleSwitchChange(e) {
      this.multiply = e.$wx.detail.value;
    }
  },

  onPullDownRefresh() {
    setTimeout(() => {
      console.log('开始刷新!');
      this.renderStartTime = new Date();
      let push_data = [];
      if (this.multiply) {
        for (let i = 0; i < this.refreshCount; i++) {
          let sort_list_data = shuffle(list_data);
          push_data = [...push_data, ...sort_list_data];
        }
        this.refreshCount = this.refreshCount * 2;
      } else {
        for (let i = 0; i < 10; i++) {
          let sort_list_data = shuffle(list_data);
          push_data = [...push_data, ...sort_list_data];
        }
      }
      let cpData = JSON.parse(JSON.stringify([...push_data, ...this.listData]));
      this.listData = cpData;
      this.$nextTick(() => {
        let time = parseInt(new Date() - this.renderStartTime);
        console.log(
          `列表渲染耗时：${time} ms，添加列表数量：${this.listData.length -
            this.dataLength}，当前数据量: ${this.listData.length}`
        );
        wx.stopPullDownRefresh();
      });
    }, 500);
  },

  onUnload() {
    this.listData = [];
    this.refreshCount = 1;
    this.renderStartTime = new Date();
    this.multiply = false;
    console.log('onUnload');
  },

  onLoad() {
    this.dataLength = this.listData.length;
  }
});
</script>

<style lang="scss" scoped>
.list-container {
  width: 100%;
  .title-container {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    margin-top: 20rpx;
    padding: 0 20rpx;
  }
  .list-container {
    box-sizing: border-box;
    padding: 20rpx;
  }
}
</style>

<config>
{
  "enablePullDownRefresh": true,
  "usingComponents": {
    "card": "~@/components/card"
  }
}
</config>
